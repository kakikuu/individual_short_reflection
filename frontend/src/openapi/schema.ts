/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/test": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * APIの接続テスト用エンドポイント
         * @description テストAPIです
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example Hello, World! */
                            message?: string;
                        };
                    };
                };
                /** @description リクエストが不正 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example Bad Request */
                            message?: string;
                        };
                    };
                };
                /** @description サーバーエラー */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example Internal Server Error */
                            message?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/reflection/{userid}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * ユーザが入力した反省のタイトルの一覧を取得
         * @description userIdに対応するユーザが入力した反省のタイトルを取得します
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description ユーザID */
                    userid: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example Hello, World! */
                            message?: string;
                        };
                    };
                };
                /** @description リクエストが不正 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example Bad Request */
                            message?: string;
                        };
                    };
                };
                /** @description サーバーエラー */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example Internal Server Error */
                            message?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/reflection/{userid}/{reflectionid}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * ユーザが入力した反省の内容を個別に取得
         * @description userIdに対応するユーザが入力した反省の内容を個別に取得します
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description ユーザID */
                    userid: string;
                    /** @description 反省ID */
                    reflectionid: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example Hello, World! */
                            message?: string;
                        };
                    };
                };
                /** @description リクエストが不正 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example Bad Request */
                            message?: string;
                        };
                    };
                };
                /** @description サーバーエラー */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example Internal Server Error */
                            message?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        /**
         * 反省をDBに保存するエンドポイント
         * @description userIdに対応するユーザが入力した反省の内容をDBに保存する
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description ユーザID */
                    userid: string;
                    /** @description 反省ID */
                    reflectionid: number;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** @example 今日の反省 */
                        title?: string;
                        /** @example 何を失敗したのか */
                        whatMiss?: string;
                        /** @example なぜ失敗したのか */
                        whyMiss?: string;
                        /** @example どうすれば失敗を防げるか */
                        blockMiss?: string;
                    };
                };
            };
            responses: {
                /** @description 成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example Hello, World! */
                            message?: string;
                        };
                    };
                };
                /** @description リクエストが不正 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example Bad Request */
                            message?: string;
                        };
                    };
                };
                /** @description サーバーエラー */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example Internal Server Error */
                            message?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Reflection: {
            /** @example 今日の反省 */
            title?: string;
            /** @example 何を失敗したのか */
            whatMiss?: string;
            /** @example なぜ失敗したのか */
            whyMiss?: string;
            /** @example どうすれば失敗を防げるか */
            blockMiss?: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
